package handler

import (
	"context"

	"gitlab.com/clowd9/dev/sirius/{{.ServiceType}}/{{.ProjectName}}/dao"

	pb "gitlab.com/clowd9/dev/sirius/{{.ServiceType}}/{{.ProjectName}}/pb"
	"google.golang.org/grpc/codes"
	healthpb "google.golang.org/grpc/health/grpc_health_v1"
	"google.golang.org/grpc/status"

)


type {{.ProjectNameTitle}}{{.ServiceTypeTitle}}Service struct {
	pb.Unimplemented{{.ProjectNameTitle}}{{.ServiceTypeTitle}}ServiceServer
	{{.ProjectNameTitle}}		dao.{{.ProjectNameTitle}}Dao
}

// Watch is required by the Healtcheck service
func (s *{{.ProjectNameTitle}}{{.ServiceTypeTitle}}Service) Watch(req *healthpb.HealthCheckRequest, ws healthpb.Health_WatchServer) error {
	return status.Errorf(codes.Unimplemented, "health check via Watch not implemented")
}

// Check is required by the Healtcheck service
func (s *{{.ProjectNameTitle}}{{.ServiceTypeTitle}}Service) Check(ctx context.Context, req *healthpb.HealthCheckRequest) (*healthpb.HealthCheckResponse, error) {
	return &healthpb.HealthCheckResponse{Status: healthpb.HealthCheckResponse_SERVING}, nil
}
